import {useReducer, useEffect} from 'react'

// const inputReducer = (state, action) => {
//     switch (action.type) {
//         case 'CHANGE':
//             return { ...state, value: action.val };
//         default:
//             return state;
//     }
// }

// const Input = (props) => {
//     const [inputState, dispatch] = useReducer(inputReducer, {value: ''}); 

//     const {id, onInput} = props
//     const {value} = inputState

//     useEffect(()=> {onInput(id, value)}, [id, onInput, value])

//     const changeHandler = event => {dispatch({type: 'CHANGE', val: event.target.value}); }
//     const element = props.element === 'input' ? (
//         <input 
//             name={props.name}
//             type={props.type}
//             placeholder={props.placeholder}
//             value=''
//             onChange={changeHandler}

//         />
//      ) : (
//         <textarea 
//             name={props.name}
//             name={props.name}
//             type={props.type}
//             placeholder={props.placeholder}
//             value=''
//         />
//      )
//         return(
//             <div>
//                 <label htmlFor={props.id}>{props.label}</label>
//                     {element}
//             </div>
//         )
// }


// export default Input;



// const element = props.element === 'input' ? (
    //     <input 
    //         id={props.id} 
    //         type={props.type} 
    //         placeholder={props.placeholder}
    //         onInput={changeHandler} value={inputState.value}
    //     />) 
    //     : 
    //     (<textarea 
    //         id={props.id} 
    //         rows={props.rows || 3} 
    //         onInput={changeHandler}
    //         value={inputState.value}/>
    //     )



    /   return (
//     <>
    
//       <div className='main'>
//         <div className="container-fluid">
//           <NavBar/>
//           <Switch>

//           <Route path = '/'>
//             <Login/>
//           </Route>

        
            
//           {/* { currentForm === 'login' ? <Login onFormSwitch={toggleForm}/> : <Register onFormSwitch={toggleForm} />} */}
          

//           <Route exact path='/register'>
//             <Register />
//           </Route>

//           <Route path='/viewers/:id/update'>
//             <EditProfile />
//           </Route>
//           <Route path='/logout'>
//             <Logout />
//           </Route> 
//           <Route path='/create'>
//             <Create />
//           </Route>
//           <Route  path="/galleries/:id/">
//             <GalleryDetail/>
//           </Route>
//           <Route  path="/galleries/:id/destroy">
//             <GalleryCard />
//           </Route>
//           <Route path='/galleries/new'>
//             <NewGalleryForm/>
//           </Route>
//           <Route path='/galleries/:id/edit'>
//             <EditGalleryForm/>
//           </Route>
//           <Route path="/galleries">
//             <GalleriesList />
//             <GalleryCard/>
//           </Route>
//           {/* arts routes */}
//           <Route path="/arts">
//             <ArtList/>
//           </Route>
//           <Route path="/arts/:id">
//             <ArtCardDetails/>
//           </Route>

//           {/* <Route path="/arts/search_arts">
//             <ArtCard/>
//           </Route> */}
//           <Route exact path='/visits'>
//             <VisitsList visitsUrl={visitsUrl}/>
//             {/* <NewVisitForm 
//               newVisitsUrl={newVisitsUrl}
//               postReq={postReq}
//             /> */}
//           </Route>
//           <Route path='/visits/:id'>
//             <VisitDetails/>
//           </Route>

//           <Route exact path='arts/exhibitions'>
//             <Exhibitions/>
//           </Route>

//           <Route exact path="/about">
//             <About/>
//           </Route>



//           <Route path='*'>
//             <NotFound/>
//           </Route>

//       </Switch>
//       </div>  
//     </div>
//     <Footer/>
//     </>

//   ); 
// }

// export default App;


//  {/* <GalleriesList 
//         galleries={galleries}
//         onDeleteGallery={handleDeleteGallery}
//         onAddGallery={addGallery}
//         // onUpdateGallery={handleUpdateGallery}
//       /> */}

      // <NewGalleryForm />


      // { 
      //   currentForm === 'login' ? 
      //   <Login onFormSwitch={toggleForm}/> 
      //   : 
      //   <Register onFormSwitch={toggleForm} />
      //   }  

      // {/* { 
      //   currentForm === 'login' ? 
      //   <Login onFormSwitch={toggleForm}/> 
      //   : 
      //   <Register onFormSwitch={toggleForm} />
      // }   */}

      //handle login
  // const handleLogin = (e) => {
  //   e.preventDefault()
  //   fetch('/login', {
  //       method: 'POST', 
  //       headers: {
  //         'Content-Type': 'application/json',
  //         Accept: 'application/json'
  //       }, 
  //       body: JSON.stringify({
  //         email: emailRef.current.value,
  //         password: passwordRef.current.value,
  //       })
  //     })
  //     .then( res => res.json())
  //     .then( viewer => { 
  //       localStorage.vid = viewer.vid 
  //       console.log(viewer.vid)
  //       history('/viewer_profile')
  //   })
  // }
  
  // handleRegister
  // const handleRegister = (e) =>{
  //   e.preventDefault()
  //   fetch( '/register', {
  //       method: 'POST', 
  //       headers: { 
  //         'Content-Type': 'application/json', 
  //         Accept: 'application/json'
  //        }, 
  //        body: JSON.stringify({
  //           first_name: firstNameRef.current.value, 
  //           last_name: lastNameRef.current.value, 
  //           email: emailRef.current.value,
  //           password: passwordRef.current.value, 
  //           zip_code: zipCodeRef.current.value,
  //        })
  //       })
  //        .then( r => r.json())
  //        .then( viewer => {
  //           localStorage.vid = viewer.vid 
  //           setViewer(viewer)
  //        })
  //       }
    

  // { currentForm === 'login' ? <Login onFormSwitch={toggleForm}/> : <Register onFormSwitch={toggleForm} />}



  function handleCookbookSubmit(e){
    alert('Cookbook Created!');
    e.preventDefault()
    const newCookbookInfo = {
      user_id: user.id,
      title: title,
      cover_image: coverImage,
    }
    setErrors(null)

    fetch(`/cookbooks`,{
      method:'POST',
      headers:{'Content-Type': 'application/json'},
      body:JSON.stringify(newCookbookInfo)
    })
    .then(res => {
      if(res.ok){
        res.json().then(cookbookData => {
          setCookbook(cookbookData)
          navigate(`/my_cookbooks`)
        })
      }else {
        res.json().then(errorInfo => setErrors((errorInfo.errors)))
      }
    })

  }


<><br/>
    <center><form onSubmit={handleCookbookSubmit} id="form-container">
        <div className="Recipe-form" >
          
        <label><strong>Cookbook Title üìö</strong></label><br/>
          <input type="text" class="form-control" id="coookbookTitle" value={title} onChange={e => setTitle(e.target.value)} /><br/>
        </div>

        <div className="form-group">
        <label><strong>Photo üñºÔ∏è</strong></label><br/>
          <input type="text" class="form-control" id="photo" value={coverImage} onChange={e => setCoverImage(e.target.value)} /><br/>
        </div>

        <input type= 'submit' value ='Save Cookbook!' />
      </form>
      </center>
    </>